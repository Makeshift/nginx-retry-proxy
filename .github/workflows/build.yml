name: Build

on: 
  push:
  pull_request:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  cancel_redundant:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  CodeQL:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      if: success() || failure()
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      if: success() || failure()
      uses: github/codeql-action/init@v1
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      if: success() || failure()
      uses: github/codeql-action/analyze@v1

  njsscan:
    runs-on: ubuntu-latest
    name: njsscan code scanning
    steps:
    - name: Checkout the code
      if: success() || failure()
      uses: actions/checkout@v2
    - name: nodejsscan scan
      if: success() || failure()
      id: njsscan
      uses: ajinabraham/njsscan-action@7237412fdd36af517e2745077cedbf9d6900d711
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      if: success() || failure()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif

  build:
    name: Build
    needs:
      - CodeQL
      - njsscan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dedupe
        run: |
          yarn global add yarn-tools
          yarn run dedupe

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1.2.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          buildkitd-flags: --debug

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3.7.0
        with:
          images: makeshift27015/nginx-retry-proxy
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,prefix=
            type=sha,prefix=,format=long

      # It's annoying (and not good practice) to a build separately for tests and build
      #  because there's a chance that they won't be identical containers
      #  but there's not really much that can be done about it because you can't load 
      #  buildx manifests into Docker right now, meaning you can't use it to push later
      # Hopefully they'll cache from this build!
      - name: Build for Tests
        uses: docker/build-push-action@v2.10.0
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          pull: true
          cache-from: makeshift27015/nginx-retry-proxy
          load: true

      - name: Anchore
        if: success() || failure()
        uses: anchore/scan-action@b08527d5ae7f7dc76f9621edb6e49eaf47933ccd
        with:
          image: makeshift27015/nginx-retry-proxy:${{ github.sha }}
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

      - name: Run Snyk to check Docker image for vulnerabilities
        if: success() || failure()
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: makeshift27015/nginx-retry-proxy:${{ github.sha }}

      - name: Login to DockerHub
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1.14.1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Container
        if: success() && github.event_name != 'pull_request'
        uses: docker/build-push-action@v2.10.0
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # list of platforms supported by our base image node:alpine
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          builder: ${{ steps.buildx.outputs.name }}
          push: true
